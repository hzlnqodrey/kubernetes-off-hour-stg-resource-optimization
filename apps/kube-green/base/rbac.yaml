apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-green-controller-manager
  namespace: kube-green-system
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: controller-manager
  annotations:
    argocd.argoproj.io/sync-wave: "0"
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-manager-role
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: rbac
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments/scale
      - replicasets/scale
      - statefulsets/scale
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - kube-green.com
    resources:
      - sleepinfos
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - kube-green.com
    resources:
      - sleepinfos/finalizers
    verbs:
      - update
  - apiGroups:
      - kube-green.com
    resources:
      - sleepinfos/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-green-manager-rolebinding
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: rbac
  annotations:
    argocd.argoproj.io/sync-wave: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-green-manager-role
subjects:
  - kind: ServiceAccount
    name: kube-green-controller-manager
    namespace: kube-green-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-green-leader-election-role
  namespace: kube-green-system
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: rbac
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-green-leader-election-rolebinding
  namespace: kube-green-system
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: rbac
  annotations:
    argocd.argoproj.io/sync-wave: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-green-leader-election-role
subjects:
  - kind: ServiceAccount
    name: kube-green-controller-manager
    namespace: kube-green-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-metrics-reader
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: rbac
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-green-proxy-role
  labels:
    app.kubernetes.io/name: kube-green
    app.kubernetes.io/component: rbac
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
